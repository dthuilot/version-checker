{{- if .Values.rollouts.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: success-rate
  labels:
    {{- include "version-checker.labels" . | nindent 4 }}
spec:
  args:
  - name: service-name
  metrics:
  - name: success-rate
    interval: 10s
    # NOTE: Prometheus provider requires ArgoCD Rollouts to be configured with a Prometheus server
    successCondition: result[0] >= 0.95
    failureLimit: 3
    provider:
      prometheus:
        address: http://prometheus.monitoring.svc.cluster.local:9090
        query: |
          sum(irate(
            nginx_ingress_controller_requests{
              service="{{ "{{args.service-name}}" }}"
            }[2m]
          )) by (service)
          /
          sum(irate(
            nginx_ingress_controller_requests{
              service="{{ "{{args.service-name}}" }}"
            }[2m]
          )) by (service)
  - name: avg-response-time
    interval: 10s
    successCondition: result[0] <= 200
    failureLimit: 3
    provider:
      prometheus:
        address: http://prometheus.monitoring.svc.cluster.local:9090
        query: |
          histogram_quantile(0.95,
            sum(rate(
              nginx_ingress_controller_request_duration_seconds_bucket{
                service="{{ "{{args.service-name}}" }}"
              }[2m]
            )) by (le, service)
          ) * 1000
---
# Simple HTTP success analysis template (alternative to Prometheus)
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: http-success-rate
  labels:
    {{- include "version-checker.labels" . | nindent 4 }}
spec:
  args:
  - name: service-name
  metrics:
  - name: http-success-rate
    interval: 10s
    count: 5
    successCondition: result == "200"
    failureLimit: 2
    provider:
      web:
        url: "http://{{ "{{args.service-name}}" }}.{{ .Release.Namespace }}.svc.cluster.local/health"
        headers:
          - key: Host
            value: "{{ "{{args.service-name}}" }}"
        method: GET
        body: ""
        timeoutSeconds: 10
        jsonPath: "{$.status}"
{{- end }}